---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    toolkit.fluxcd.io/tenant: sre-team
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 120m
  type: oci
  url: oci://ghcr.io/prometheus-community/charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      version: "41.x"
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      verify:
        provider: cosign
      interval: 60m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: false
    grafana:
      adminPassword: flux
    prometheus:
      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
      enableRemoteWriteReceiver: true
      remoteWrite:
        - url: http://monitoring-telegraf.monitoring.svc.cluster.local/receive
          bearerToken: 1234567890qwerty
      remoteWriteDashboards: true
        # basicAuth:
        #     username:
        #       name: kubepromsecret
        #       key: username
        #     password:
        #       name: kubepromsecret
        #       key: password
      additionalScrapeConfigs:
        # - job_name: prometheus
        #   kubernetes_sd_configs:
        #     - role: node
        #   scheme: http
# scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: 'prometheus'

          # metrics_path defaults to '/metrics'
          # scheme defaults to 'http'.

          static_configs:
          - targets: ['localhost:9090']

        - job_name: node
          static_configs:
          - targets: ['localhost:9100']
        - job_name: podinfo
          static_configs:
          - targets: ['http://podinfo.apps.svc.cluster.local:9898/metrics']
            labels:
              app: podinfo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "self-signed"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - grafana.flux.local
      secretName: grafana-ingress-tls
  rules:
    - host: grafana.flux.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port:
                  number: 80

# https://grafana.com/docs/grafana-cloud/kubernetes-monitoring/how-to/prometheus/remote_write_helm_operator/